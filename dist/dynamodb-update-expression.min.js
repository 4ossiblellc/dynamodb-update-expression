!function(f){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=f();else if("function"==typeof define&&define.amd)define([],f);else{var g;g="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,g.dynamodbUpdateExpression=f()}}(function(){var define;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){"use strict";var merge=require("deepmerge");Array.prototype.diff=function(a){return this.filter(function(i){return a.indexOf(i)<0})};var isEmpty=function(map){for(var key in map)if(map.hasOwnProperty(key))return!1;return!0},deepDiffMapper=function(){return{VALUE_CREATED:"created",VALUE_UPDATED:"updated",VALUE_DELETED:"deleted",VALUE_UNCHANGED:"unchanged",map:function(obj1,obj2){if(this.isFunction(obj1)||this.isFunction(obj2))throw"Invalid argument. Function given, object expected.";if(this.isValue(obj1)||this.isValue(obj2))return{type:this.compareValues(obj1,obj2),data:obj2,dataType:void 0===obj1?typeof obj2:typeof obj1};if(this.isArray(obj1)||this.isArray(obj2))return{type:this.compareValues(obj1,obj2),data:obj2,dataType:"list"};var diff={};for(var key in obj1)if(!this.isFunction(obj1[key])){var value2=void 0;"undefined"!=typeof obj2[key]&&(value2=obj2[key]),diff[key]=this.map(obj1[key],value2)}for(var key in obj2)this.isFunction(obj2[key])||"undefined"!=typeof diff[key]||(diff[key]=this.map(void 0,obj2[key]));return diff},compareValues:function(value1,value2){return value1===value2?this.VALUE_UNCHANGED:"undefined"==typeof value1?this.VALUE_CREATED:"undefined"==typeof value2?this.VALUE_DELETED:this.VALUE_UPDATED},isFunction:function(obj){return"[object Function]"==={}.toString.apply(obj)},isArray:function(obj){return"[object Array]"==={}.toString.apply(obj)},isObject:function(obj){return"[object Object]"==={}.toString.apply(obj)},isValue:function(obj){return!this.isObject(obj)&&!this.isArray(obj)}}}(),updateExpressionGenerator=function(compareResult){var request={UpdateExpression:"",ExpressionAttributeNames:{},ExpressionAttributeValues:{}},filterOutDeleteFields=function(obj,path){var name,wholeList={updateList:[],removeList:[]};for(var i in obj)if(obj.hasOwnProperty(i)&&"object"==typeof obj[i])if("updated"!==obj[i].type||""!==obj[i].data&&void 0!==obj[i].data)if("updated"!==obj[i].type&&"created"!==obj[i].type||!obj[i].data){if(void 0===obj[i].type&&void 0===obj[i].data||obj[i].type&&"deleted"!==obj[i].type&&"unchanged"!==obj[i].type){var partial=isNaN(parseInt(i,10))?"."+i:"["+i+"]";name=null!==path?path+partial:i;var childList=filterOutDeleteFields(obj[i],name);wholeList.updateList=wholeList.updateList.concat(childList.updateList),wholeList.removeList=wholeList.removeList.concat(childList.removeList)}}else wholeList.updateList.push({name:(path?path+".":"")+i,value:obj[i].data,dataType:obj[i].dataType});else wholeList.removeList.push({name:(path?path+".":"")+i});return wholeList},wholeList=filterOutDeleteFields(compareResult,null);return wholeList.updateList.forEach(function(expr){request.UpdateExpression+=""!==request.UpdateExpression?", ":"SET ";var propName=expr.name.replace(/\./g,"").replace(/_/g,"").replace(/&/g,"").replace(/_/g,"").replace(/\[/g,"").replace(/\]/g,"");request.UpdateExpression+=expr.name+" = :"+propName,request.ExpressionAttributeValues[":"+propName]=expr.value}),wholeList.removeList.forEach(function(expr,index){request.UpdateExpression+=0===index?(request.UpdateExpression.length>0?" ":"")+"REMOVE ":", ";var propName=expr.name.replace(/\./g,"").replace(/_/g,"").replace(/&/g,"").replace(/_/g,"").replace(/\[/g,"").replace(/\]/g,"");request.UpdateExpression+="#"+propName,request.ExpressionAttributeNames["#"+propName]=expr.name}),isEmpty(request.ExpressionAttributeNames)&&delete request.ExpressionAttributeNames,request},removeExpressionGenerator=function(original,removes,compareResult){var request={UpdateExpression:"",ExpressionAttributeNames:{},ExpressionAttributeValues:{}},filterOutCreateFields=function(obj,path){var name,updateList=[];for(var i in obj)if(obj.hasOwnProperty(i)&&"object"==typeof obj[i])if("updated"!==obj[i].type&&"deleted"!==obj[i].type||!obj[i].data){if(void 0===obj[i].type&&void 0===obj[i].data||obj[i].type&&"created"!==obj[i].type&&"unchanged"!==obj[i].type){var partial=isNaN(parseInt(i,10))?"."+i:"["+i+"]";name=null!==path?path+partial:i,updateList=updateList.concat(filterOutCreateFields(obj[i],name))}}else updateList.push({name:(path?path+".":"")+i,value:obj[i].data,dataType:obj[i].dataType});return updateList},updateList=filterOutCreateFields(compareResult,null);updateList.forEach(function(expr){expr.name.replace(/\./g,"").replace(/_/g,"").replace(/&/g,"").replace(/_/g,"").replace(/\[/g,"").replace(/\]/g,"");"list"!=expr.dataType&&(request.UpdateExpression+=""!==request.UpdateExpression?", ":"REMOVE ",request.UpdateExpression+=expr.name+" ")});var firstElement=!0;return updateList.forEach(function(expr){var propName=expr.name.replace(/\./g,"").replace(/_/g,"").replace(/&/g,"").replace(/_/g,"").replace(/\[/g,"").replace(/\]/g,"");if("list"!=expr.dataType);else{firstElement?(firstElement=!1,request.UpdateExpression+="set "):request.UpdateExpression+=", ";var value=original[expr.name].diff(removes[expr.name]);request.UpdateExpression+=expr.name+" = :"+propName,request.ExpressionAttributeValues[":"+propName]=value}}),isEmpty(request.ExpressionAttributeNames)&&delete request.ExpressionAttributeNames,isEmpty(request.ExpressionAttributeValues)&&delete request.ExpressionAttributeValues,request};exports.generateRemoveExpression=function(original,removes){return removeExpressionGenerator(original,removes,deepDiffMapper.map(removes,original),null)},exports.generateUpdateExpression=function(original,updates){var merged=merge(original,updates);return updateExpressionGenerator(deepDiffMapper.map(original,merged),null)},module.exports={getRemoveExpression:exports.generateRemoveExpression,getUpdateExpression:exports.generateUpdateExpression}},{deepmerge:2}],2:[function(require,module,exports){!function(root,factory){"function"==typeof define&&define.amd?define(factory):"object"==typeof exports?module.exports=factory():root.deepmerge=factory()}(this,function(){return function deepmerge(target,src){var array=Array.isArray(src),dst=array&&[]||{};return array?(target=target||[],dst=dst.concat(target),src.forEach(function(e,i){"undefined"==typeof dst[i]?dst[i]=e:"object"==typeof e?dst[i]=deepmerge(target[i],e):-1===target.indexOf(e)&&dst.push(e)})):(target&&"object"==typeof target&&Object.keys(target).forEach(function(key){dst[key]=target[key]}),Object.keys(src).forEach(function(key){dst[key]="object"==typeof src[key]&&src[key]&&target[key]?deepmerge(target[key],src[key]):src[key]})),dst}})},{}]},{},[1])(1)});